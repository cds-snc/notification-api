steps:
  - name: "gcr.io/cloud-builders/gcloud"
    id: "decrypt env"
    args:
      - kms
      - decrypt
      - --ciphertext-file=.env.enc
      - --plaintext-file=.env
      - --location=global
      - --project=$PROJECT_ID
      - --keyring=deploy
      - --key=env
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'gcr.io/$PROJECT_ID/api:$SHORT_SHA',
        '-t',
        'gcr.io/$PROJECT_ID/api:latest',
        '-f',
        'ci/Dockerfile'
        '.',
      ]
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/api:$SHORT_SHA']
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
    - set
    - image
    - deployment.apps/api
    - api=gcr.io/$PROJECT_ID/api:$SHORT_SHA
    - --namespace=notification-canada-ca
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=northamerica-northeast1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=notifier'
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
    - set
    - image
    - deployment.apps/celery
    - celery=gcr.io/$PROJECT_ID/api:$SHORT_SHA
    - --namespace=notification-canada-ca
    env:
    - 'CLOUDSDK_COMPUTE_ZONE=northamerica-northeast1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=notifier'
images:
  - 'gcr.io/$PROJECT_ID/api:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/api:latest'