from enum import Enum
import os


class FeatureFlag(Enum):
    CHECK_GITHUB_SCOPE_ENABLED = 'CHECK_GITHUB_SCOPE_ENABLED'
    CHECK_TEMPLATE_NAME_EXISTS_ENABLED = 'CHECK_TEMPLATE_NAME_EXISTS_ENABLED'
    EMAIL_ATTACHMENTS_ENABLED = 'EMAIL_ATTACHMENTS_ENABLED'
    EMAIL_DELIVERY_STATUS_OVERHAUL = 'EMAIL_DELIVERY_STATUS_OVERHAUL'
    EMAIL_PASSWORD_LOGIN_ENABLED = 'EMAIL_PASSWORD_LOGIN_ENABLED'  # nosec
    GITHUB_LOGIN_ENABLED = 'GITHUB_LOGIN_ENABLED'
    NIGHTLY_NOTIF_CSV_ENABLED = 'NIGHTLY_NOTIF_CSV_ENABLED'
    NOTIFICATION_FAILURE_REASON_ENABLED = 'NOTIFICATION_FAILURE_REASON_ENABLED'
    PINPOINT_INBOUND_SMS_ENABLED = 'PINPOINT_INBOUND_SMS_ENABLED'
    PINPOINT_RECEIPTS_ENABLED = 'PINPOINT_RECEIPTS_ENABLED'
    PINPOINT_SMS_VOICE_V2 = 'PINPOINT_SMS_VOICE_V2'
    PLATFORM_STATS_ENABLED = 'PLATFORM_STATS_ENABLED'
    PUSH_NOTIFICATIONS_ENABLED = 'PUSH_NOTIFICATIONS_ENABLED'
    STORE_TEMPLATE_CONTENT = 'STORE_TEMPLATE_CONTENT'
    V3_ENABLED = 'V3_ENABLED'
    VA_PROFILE_SMS_STATUS_ENABLED = 'VA_PROFILE_SMS_STATUS_ENABLED'
    VA_SSO_ENABLED = 'VA_SSO_ENABLED'


def is_gapixel_enabled(current_app):
    return current_app.config.get('GOOGLE_ANALYTICS_ENABLED')


def is_feature_enabled(feature_flag):
    return isinstance(feature_flag, FeatureFlag) and os.getenv(feature_flag.value, 'False') == 'True'
