on:
  push:
name: Python tests
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.9
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_notification_api
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Install libcurl
      run: sudo apt-get update && sudo apt-get install libssl-dev libcurl4-openssl-dev
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
    - name: Set up Python 3.10
      uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # v4.3.0
      with:
        python-version: '3.10'
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # v3.0.11
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install requirements
      run: pip install -r requirements_for_test.txt
    - name: Run tests
      run: make test
    - name: Upload pytest logs on failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.1
      with:
        name: pytest-logs
        path: |
          pytest*.log
    - name: Get python version
      run: |
        python_version=$(python  -V | cut -d' ' -f2)
        echo "python_version=${python_version}" >> $GITHUB_ENV
    - name: Make version file
      run: |
        printf '__commit_sha__ = "09cfe03100443fb9071bba88d5c8775ff54a9ebc"\n__time__ = "2022-07-25:15:11:05"\n' > version.py
        cp version.py "${{ github.workspace }}/app/"
    - name: Copy site-packages in workspace
      working-directory: /opt/hostedtoolcache/Python/${{ env.python_version }}/x64/lib/python3.10/
      shell: bash
      run: |
        mkdir -p "${{ github.workspace }}/env/" && cp -fR site-packages "${{ github.workspace }}/env/"
    - name: Install development .env file
      working-directory: ${{ github.workspace }}
      shell: bash
      run: |
        cp -f .env.example .env
    - name: Checks for new endpoints against AWS WAF rules
      uses: cds-snc/notification-utils/.github/actions/waffles@50.0.1
      with:
        app-loc: '/github/workspace'
        app-libs: '/github/workspace/env/site-packages'
        flask-mod: 'application'
        flask-prop: 'application'
        base-url: 'https://api.staging.notification.cdssandbox.xyz'
    - name: Notify Slack channel if this job fails
      if: ${{ failure() && github.ref == 'refs/heads/main' }}
      run: |
        json="{'text':'Scheduled CI testing failed: <https://github.com/cds-snc/notification-api/actions|GitHub actions>'}"
        curl -X POST -H 'Content-type: application/json' --data "$json"  ${{ secrets.SLACK_WEBHOOK }}
