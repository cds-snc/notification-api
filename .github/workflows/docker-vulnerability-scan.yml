name: Docker vulnerability scan

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  docker-vulnerability-scan-k8s:
    runs-on: ubuntu-latest
    env:
      DOCKERFILE_PATH: "ci/Dockerfile"
      DOCKER_IMAGE: "public.ecr.aws/v6b8u5o6/notify-api"

    steps:
      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@2f9f10ea3fa2eed41ac443fee8bfbd059af2d0a4 # v1.6.0
        with:
          registry-type: public

      - name: Docker vulnerability scan
        uses: cds-snc/security-tools/.github/actions/docker-scan@cfec0943e40dbb78cee115bbbe89dc17f07b7a0f # v2.1.3
        with:
          docker_image: "${{ env.DOCKER_IMAGE }}:latest"
          dockerfile_path: "${{ env.DOCKERFILE_PATH }}"
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

  docker-vulnerability-scan-lambda:
    runs-on: ubuntu-latest
    env:
      DOCKERFILE_PATH: "ci/Dockerfile.lambda"
      DOCKER_IMAGE: "${{ secrets.PRODUCTION_API_LAMBDA_ECR_ACCOUNT }}.dkr.ecr.ca-central-1.amazonaws.com/notify/api-lambda"

    steps:
      - name: Configure AWS private ECR credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          aws-access-key-id: ${{ secrets.PRODUCTION_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PRODUCTION_ECR_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Get latest Docker image tag
        run: |
          IMAGE_TAG="$(aws ecr describe-images --output json --repository-name notify/api-lambda --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' | jq . --raw-output)"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@2f9f10ea3fa2eed41ac443fee8bfbd059af2d0a4 # v1.6.0

      - name: Docker vulnerability scan
        uses: cds-snc/security-tools/.github/actions/docker-scan@cfec0943e40dbb78cee115bbbe89dc17f07b7a0f # v2.1.3
        with:
          docker_image: "${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}"
          dockerfile_path: "${{ env.DOCKERFILE_PATH }}"
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
