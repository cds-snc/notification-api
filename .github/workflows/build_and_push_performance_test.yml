
name: Build and Push Performance Testing Container to ECR, deploy to lambda

on:
  workflow_dispatch:
  push:
    paths:
      - 'tests-perf/**'
      - 'tests_smoke/**'

env:
  GITHUB_SHA: ${{ github.sha }}
  REGISTRY: ${{ secrets.AWS_ACCOUNT }}.dkr.ecr.ca-central-1.amazonaws.com/notify

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: filter
        with:
          filters: |
            performance-test: 
              - 'tests-perf/**'
              - 'tests_smoke/**'

  build-push-and-deploy:
    if: ${{ needs.changes.outputs.images != '[]' }}
    runs-on: ubuntu-latest
    needs: changes
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.changes.outputs.images) }}

    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - name: Build container
        run: |
          docker build \
          --build-arg git_sha=$GITHUB_SHA \
          -t $REGISTRY/${{ matrix.image }}:$GITHUB_SHA \
          -t $REGISTRY/${{ matrix.image }}:latest . \
          -f tests-perf/ops/Dockerfile

      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@261a7de32bda11ba01f4d75c4ed6caf3739e54be # v1.5.3

      - name: Push containers to ECR
        run: |
          docker push $REGISTRY/${{ matrix.image }}:$GITHUB_SHA
          docker push $REGISTRY/${{ matrix.image }}:latest

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      - name: Notify Slack channel if this job failed
        if: ${{ failure() }}
        run: |
          json="{'text':'<!here> CI is failing in <https://github.com/cds-snc/notification-api/|notification-api> !'}"
          curl -X POST -H 'Content-type: application/json' --data "$json"  ${{ secrets.SLACK_WEBHOOK }}
