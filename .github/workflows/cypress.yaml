name: Cypress tests

on:
  push:

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.17-bullseye
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_notification_api
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:6.2@sha256:9e75c88539241ad7f61bc9c39ea4913b354064b8a75ca5fc40e1cef41b645bc0
        options: >-
          --port 6380

    steps:
    - name: Set up Python 3.10
      uses: actions/setup-python@57ded4d7d5e986d7296eab16560982c6dd7c923b # v4.6.0
      with:
        python-version: '3.10'

    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install poetry
      env:
        POETRY_VERSION: 1.3.2
      run: pip install poetry==${POETRY_VERSION} && poetry --version

    - name: Check poetry.lock aligns with pyproject.toml
      run: poetry lock --check

    - name: Install requirements
      run: poetry install --with test

    - name: prep db and run notify api
      env:
        NOTIFY_ENVIRONMENT: test
        FLASK_APP: application.py
        REDIS_ENABLED: 1
        REDIS_URL: redis://host.docker.internal:6380
        REDIS_PUBLISH_URL: redis://host.docker.internal:6380
        SQLALCHEMY_DATABASE_URI: postgresql://postgres:postgres@localhost:5432/test_notification_api
        SQLALCHEMY_DATABASE_READER_URI: postgresql://reader:postgres@localhost:5432/test_notification_api
      run: |
        createdb --user=postgres test_notification_api
        poetry run flask db upgrade
        poetry run make run

    - name: Write the cypress.env.json file
      run: |
        echo '${{ secrets.CYPRESS_ENV_JSON }}' > tests_cypress/cypress.env.json 

    - name: Run cypress tests
      uses: cypress-io/github-action@d79d2d530a66e641eb4a5f227e13bc985c60b964 # v4.2.2
      env:
        CYPRESS_BASE_URL: http://localhost:6011
      with:
        record: false
        build: npx cypress info
        working-directory: tests_cypress
        spec: cypress/e2e/admin/api/sanity_check.cy.js