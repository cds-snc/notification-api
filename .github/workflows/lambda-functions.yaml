name: Build and Deploy Lambda Functions

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to provision (dev|staging|perf|prod}"
        required: false
        default: dev
      branch_name:
        description: "Brand to deploy from"
        required: true
    paths:
      - "user_flows/**.py"
      - "lambda_functions/*"
      - ".github/workflows/lambda-functions.yaml"
    


env:
  tf_version: 0.12.29
  AWS_ACCESS_KEY_ID: ${{ secrets.VAEC_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.VAEC_AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy-user-flows-lambda:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./lambda_functions/user_flows"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.deployment.ref }}

      - name: Configure VAEC AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-gov-west-1
          role-to-assume: ${{ secrets.VAEC_DEPLOY_ROLE }}
          role-skip-session-tagging: true
          role-duration-seconds: 900

      - name: Set Python version
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: Install and package dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r ../../requirements_for_user_flows.txt
          deactivate
          cat va-internal-cert-chain.pem >> ./venv/lib/python3.6/site-packages/certifi/cacert.pem
          cd venv/lib/python3.6/site-packages
          zip -r9 ../../../../user_flows_lambda.zip .

      - name: Package and deploy lambda function
        run: |
          zip -ug user_flows_lambda.zip user_flows_lambda.py steps.py test_retrieve_everything.py conftest.py
          aws lambda update-function-code --function-name project-user-flows-lambda --zip-file fileb://user_flows_lambda.zip

  deploy-vetext-incoming-forwarder-lambda:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./lambda_functions/vetext_incoming_forwarder_lambda"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.deployment.ref }}

      - name: Configure VAEC AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-gov-west-1
          role-to-assume: ${{ secrets.VAEC_DEPLOY_ROLE }}
          role-skip-session-tagging: true
          role-duration-seconds: 900

      - name: Set Python version
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: Package and deploy lambda function
        run: |
          zip -ug vetext_incoming_forwarder_lambda.zip vetext_incoming_forwarder_lambda.py
          aws lambda update-function-code --function-name project-dev-vetext-incoming-forwarder-lambda --zip-file fileb://vetext_incoming_forwarder_lambda.zip
          aws lambda update-function-code --function-name project-staging-vetext-incoming-forwarder-lambda --zip-file fileb://vetext_incoming_forwarder_lambda.zip

  deploy-other-lambdas:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "./lambda_functions"
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch_name }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.VAEC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.VAEC_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1
          role-to-assume: ${{ secrets.VAEC_DEPLOY_ROLE }}
          role-skip-session-tagging: true
          role-duration-seconds: 1800

      - name: Set Python version
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: Package and deploy SES Callback lambda function
        run: |
          zip -j ses_callback_lambda ses_callback/ses_callback_lambda.py
          aws lambda update-function-code --function-name project-${{ github.event.inputs.environment }}-ses-callback-lambda --zip-file fileb://ses_callback_lambda.zip

      - name: Package and deploy Two Way SMS lambda function
        run: |
          zip -j two_way_sms_lambda two_way_sms/two_way_sms_lambda.py
          aws lambda update-function-code --function-name project-${{ github.event.inputs.environment }}-two-way-sms-lambda --zip-file fileb://two_way_sms_lambda.zip

      - name: Package and deploy pinpoint callback lambda function
        run: |
          zip -j pinpoint_callback_lambda pinpoint_callback/pinpoint_callback_lambda.py
          aws lambda update-function-code --function-name project-${{ github.event.inputs.environment }}-pinpoint-callback-lambda --zip-file fileb://pinpoint_callback_lambda.zip

      - name: Package and deploy pinpoint inbound sms lambda function
        run: |
          zip -j pinpoint_inbound_sms_lambda pinpoint_inbound_sms/pinpoint_inbound_sms_lambda.py
          aws lambda update-function-code --function-name project-${{ github.event.inputs.environment }}-pinpoint-inbound-sms-lambda --zip-file fileb://pinpoint_inbound_sms_lambda.zip

      - name: Package and deploy VA Profile opt-in/out lambda function
        run: |
          zip -j va_profile_opt_in_out_lambda va_profile/va_profile_opt_in_out_lambda.py
          aws lambda update-function-code --function-name project-${{ github.event.deployment.environment }}-va-profile-opt-in-out-lambda --zip-file fileb://va_profile_opt_in_out_lambda.zip

      - name: Package and deploy nightly stats bigquery upload lambda function
        run: |
          cd nightly_stats_bigquery_upload/
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements-lambda.txt
          deactivate
          cd venv/lib/python3.8/site-packages
          zip -r9 ../../../../nightly_stats_bigquery_upload_lambda.zip .
          cd ../../../../
          zip -ugj nightly_stats_bigquery_upload_lambda nightly_stats_bigquery_upload_lambda.py
          aws lambda update-function-code --function-name project-${{ github.event.inputs.environment }}-nightly-stats-bigquery-upload-lambda --zip-file fileb://nightly_stats_bigquery_upload_lambda.zip
