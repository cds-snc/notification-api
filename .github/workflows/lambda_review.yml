
name: Build and push lambda image to staging for this PR (temporary)

on:
  push:

env:
  REGISTRY: ${{ secrets.STAGING_API_LAMBDA_ECR_ACCOUNT }}.dkr.ecr.ca-central-1.amazonaws.com/notify

jobs:
  build-push-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: ["api-lambda"]

    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0

      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # tag=v1
        with:
          aws-access-key-id: ${{ secrets.STAGING_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_ECR_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Build New Relic Python agent container
        run: docker build -f ci/Dockerfile.lambda_python_new_relic -t python_newrelic:latest .

      - name: Build container
        run: |
          docker build \
          --build-arg GIT_SHA=${GITHUB_SHA::7} \
          -t $REGISTRY/${{ matrix.image }}:${GITHUB_SHA::7} \
          . \
          -f ci/Dockerfile.lambda

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@261a7de32bda11ba01f4d75c4ed6caf3739e54be # v1

      - name: Push containers to ECR
        run: |
          docker push $REGISTRY/${{ matrix.image }}:${GITHUB_SHA::7}

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

