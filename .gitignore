queues.csv

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]

venv/
venv-freeze/

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg
/cache

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
.pytest_cache
coverage.xml
test_results.xml
*,cover

# Translations
*.mo
*.pot

# Django stuff:
*.log

# Sphinx documentation
docs/_build/

# PyBuilder
target/
.idea/
.vscode

# Mac
*.DS_Store
environment.sh
.envrc
.env

# Docker
certs/ssl_*

celerybeat-schedule

# CloudFoundry
.cf

/scripts/run_my_tests.sh

# Terraform
.terraform

# AWS Lambda function outfile
user_flows_exit_code.txt

# These files can get written in the notification_api directory if you run bash commands on a container with read-write access.
.ash_history
.bash_history
.python_history

# pdb
.local/

# Ignore newly generated migrations that retain the default name.
migrations/versions/*_.py

# Ignore test modifications. Update file with git add --force scripts/run_tests.sh
scripts/run_tests.sh